{
	"info": {
		"name": "search-activity-controller",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ROLE_ONC",
			"item": [
				{
					"name": "GET /activity/search - 200 status and valid response for ONC users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"expect GET /activity/search request to return 200 status and response body to not be empty\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.response).not.eq(null);\r",
									"});\r",
									"pm.test(\"expect GET /activity/search request returns correct response\", function () {\r",
									"    pm.expect(jsonData.results[0].concept).to.eql('CERTIFIED_PRODUCT');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "API-Key",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/rest/activity/search?activityDateStart=2024-03-31T15:56&activityDateEnd=2024-04-03T16:02&concepts=CERTIFIED_PRODUCT",
							"host": [
								"{{url}}"
							],
							"path": [
								"rest",
								"activity",
								"search"
							],
							"query": [
								{
									"key": "activityDateStart",
									"value": "2024-03-31T15:56"
								},
								{
									"key": "activityDateEnd",
									"value": "2024-04-03T16:02"
								},
								{
									"key": "concepts",
									"value": "CERTIFIED_PRODUCT"
								}
							]
						},
						"description": "GET /activity/search - 200 status and valid response for ONC users"
					},
					"response": []
				},
				{
					"name": "GET /activity/concept- 200 status and correct response body to ONC users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"expect GET /activity/concept request to return 200 status and correct response body to ONC users\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.response).not.eq(null);\r",
									"    pm.expect(pm.response.text()).to.include(\"ANNUAL_REPORT\",\"API_KEY\",\"CERTIFICATION_BODY\",\"CERTIFIED_PRODUCT\",\"CHANGE_REQUEST\",\"COMPLAINT\",\"CORRECTIVE_ACTION_PLAN\",\"DEVELOPER\",\"FUNCTIONALITY_TESTED\",\"LISTING_UPLOAD\",\"PENDING_CERTIFIED_PRODUCT\",\"PENDING_SURVEILLANCE\",\"PRODUCT\",\"QUARTERLY_REPORT\",\"QUARTERLY_REPORT_LISTING\",\"STANDARD\",\"SVAP\",\"TESTING_LAB\",\"USER\",\"VERSION\")\r",
									"    ;});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "API-Key",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/rest/activity/concepts",
							"host": [
								"{{url}}"
							],
							"path": [
								"rest",
								"activity",
								"concepts"
							]
						},
						"description": "GET /activity/concept- 200 status and correct response body to ONC users"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"var ReqBody= {\r",
							"        userName:pm.environment.get(\"emailONC\"),password:pm.environment.get(\"passwordONC\")\r",
							"    };\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get(\"authurl\"),\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"Content-Type\": \"application/json\",\r",
							"        \"API-KEY\": pm.environment.get(\"apiKey\")\r",
							"    },\r",
							"    body: JSON.stringify(ReqBody)\r",
							"}, function (err, response) {\r",
							"   var jsonData = response.json();\r",
							"   pm.environment.set(\"token\",jsonData[pm.environment.get(\"authTokenField\")])\r",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ROLE_ACB",
			"item": [
				{
					"name": "GET /activity/concepts - ACB user gets status 401 and error",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"expect ACB user to receive 401 unauthorized response on request to get /activity/concepts\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"expect ACB user to receive access denied error on request to get /activity/concepts\", () => {\r",
									"  pm.expect(pm.response.text()).to.include(\"Access Denied\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "api-kEY",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/rest/activity/concepts",
							"host": [
								"{{url}}"
							],
							"path": [
								"rest",
								"activity",
								"concepts"
							]
						},
						"description": "GET /activity/concepts - ACB user gets status 401 and error"
					},
					"response": []
				},
				{
					"name": "GET /activity/search - ACB user to receive 401 status and error",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"expect ACB user to receive 401 unauthorized response on request to get /activity/search\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"expect ACB user to receive access denied error on request to get /activity/search\", () => {\r",
									"  pm.expect(pm.response.text()).to.include(\"Access Denied\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "API-Key",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/rest/activity/search?activityDateStart=2024-03-31T15:56&activityDateEnd=2024-04-03T16:02&concepts=CERTIFIED_PRODUCT",
							"host": [
								"{{url}}"
							],
							"path": [
								"rest",
								"activity",
								"search"
							],
							"query": [
								{
									"key": "activityDateStart",
									"value": "2024-03-31T15:56"
								},
								{
									"key": "activityDateEnd",
									"value": "2024-04-03T16:02"
								},
								{
									"key": "concepts",
									"value": "CERTIFIED_PRODUCT"
								}
							]
						},
						"description": "GET /activity/search - ACB user to receive 401 status and error"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"var ReqBody= {\r",
							"        userName:pm.environment.get(\"emailACB\"),password:pm.environment.get(\"passwordACB\")\r",
							"    };\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get(\"authurl\"),\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"Content-Type\": \"application/json\",\r",
							"        \"API-KEY\": pm.environment.get(\"apiKey\")\r",
							"    },\r",
							"    body: JSON.stringify(ReqBody)\r",
							"}, function (err, response) {\r",
							"   var jsonData = response.json();\r",
							"   pm.environment.set(\"token\",jsonData[pm.environment.get(\"authTokenField\")])\r",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}